CREATE TABLE RENTALS_AUD (
                           EVENT_ID INT(11) NOT NULL AUTO_INCREMENT,
                           EVENT_DATE DATETIME NOT NULL,
                           EVENT_TYPE VARCHAR(10) DEFAULT NULL,
                           RENTAL_ID INT(11) NOT NULL,
                           OLD_USER_ID INT(11),
                           NEW_USER_ID INT(11),
                           OLD_CAR_ID INT(11),
                           NEW_CAR_ID INT(11),
                           NEW_RENT_DATE DATETIME,
                           OLD_RENT_DATE DATETIME,
                           NEW_RETURN_DATE DATETIME,
                           OLD_RETURN_DATE DATETIME,
                           OLD_CURRENCY ENUM('PLN', 'USD', 'EUR'),
                           NEW_CURRENCY ENUM('PLN', 'USD', 'EUR'),
                           OLD_PRICE_RATE DOUBLE(9,2),
                           NEW_PRICE_RATE DOUBLE(9,2),
                           OLD_TOTAL_VALUE DOUBLE(9,2),
                           NEW_TOTAL_VALUE DOUBLE(9,2),
                           OLD_LEFT_TO_PAY DOUBLE(9,2),
                           NEW_LEFT_TO_PAY DOUBLE(9,2),
                           OLD_RENTAL_STATUS ENUM('RENTED', 'RETURNED_AND_TO_PAY', 'RETURNED_AND_PAID'),
                           NEW_RENTAL_STATUS ENUM('RENTED', 'RETURNED_AND_TO_PAY', 'RETURNED_AND_PAID'),
                           OLD_PAYMENT_DATE DATETIME,
                           NEW_PAYMENT_DATE DATETIME,
                           PRIMARY KEY (EVENT_ID)
);

DELIMITER $$
CREATE TRIGGER RENTALS_INSERT AFTER INSERT ON rentals
    FOR EACH ROW
BEGIN
    INSERT INTO RENTALS_AUD (EVENT_DATE, EVENT_TYPE, RENTAL_ID, NEW_USER_ID, NEW_CAR_ID, NEW_RENT_DATE, NEW_RETURN_DATE, NEW_CURRENCY,
                             NEW_PRICE_RATE, NEW_TOTAL_VALUE, NEW_LEFT_TO_PAY, NEW_RENTAL_STATUS, NEW_PAYMENT_DATE)
        VALUE(CURTIME(), 'INSERT', NEW.RENTAL_ID, NEW.user, NEW.car, NEW.RENT_DATE, NEW.RETURN_DATE, NEW.CURRENCY,
              NEW.PRICE_RATE, NEW.TOTAL_VALUE, NEW.LEFT_TO_PAY, NEW.RENTAL_STATUS, NEW.PAYMENT_DATE);
END $$
DELIMITER ;

DELIMITER $$
CREATE TRIGGER RENTALS_DELETE AFTER DELETE ON rentals
    FOR EACH ROW
BEGIN
    INSERT INTO RENTALS_AUD (EVENT_DATE, EVENT_TYPE, RENTAL_ID)
        VALUE(CURTIME(), 'DELETE', OLD.rental_id);
END $$
DELIMITER ;

DELIMITER $$
CREATE TRIGGER RENTALS_UPDATE AFTER UPDATE ON rentals
    FOR EACH ROW
BEGIN
    INSERT INTO RENTALS_AUD (EVENT_DATE, EVENT_TYPE, RENTAL_ID, NEW_USER_ID, OLD_USER_ID, NEW_CAR_ID, OLD_CAR_ID, NEW_RENT_DATE, OLD_RENT_DATE,
                             NEW_RETURN_DATE, OLD_RETURN_DATE, NEW_CURRENCY, OLD_CURRENCY, NEW_PRICE_RATE, OLD_PRICE_RATE,
                             NEW_TOTAL_VALUE, OLD_TOTAL_VALUE, NEW_LEFT_TO_PAY, OLD_LEFT_TO_PAY, NEW_RENTAL_STATUS, OLD_RENTAL_STATUS,
                             NEW_PAYMENT_DATE, OLD_PAYMENT_DATE)
        VALUE(CURTIME(), 'UPDATE', OLD.RENTAL_ID, NEW.USER, OLD.USER, NEW.CAR, OLD.CAR, NEW.RENT_DATE, OLD.RENT_DATE,
              NEW.RETURN_DATE, OLD.RETURN_DATE, NEW.CURRENCY, OLD.CURRENCY, NEW.PRICE_RATE, OLD.PRICE_RATE,
              NEW.TOTAL_VALUE, OLD.TOTAL_VALUE, NEW.LEFT_TO_PAY, OLD.LEFT_TO_PAY, NEW.RENTAL_STATUS, OLD.RENTAL_STATUS,
              NEW.PAYMENT_DATE, OLD.PAYMENT_DATE);
END $$
DELIMITER ;